[amit@localhost gdb(master)]$ gdb testlists

GNU gdb (GDB) Fedora 7.9.1-20.fc22
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-redhat-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from testlists...done.

(gdb) break PrintList
Breakpoint 1 at 0x400828: file lists.c, line 28.

(gdb) run 100
Starting program: /home/amit/Documents/work/courses/github/CS253-resources/C-examples/debug/gdb/testlists 100
Missing separate debuginfos, use: dnf debuginfo-install glibc-2.21-13.fc22.x86_64

Breakpoint 1, PrintList (L=0x602c70) at lists.c:28
28	    int count = 0;

(gdb) list
23	    return list;
24	}
25	
26	void PrintList(NodePtr L)
27	{
28	    int count = 0;
29	    while (L) {
30	        printf(" %d -->",L->item);
31	        L = L->next;
32	        count++;

(gdb) list
33	    }
34	    printf(" NULL \n");
35	}
36	
37	
38	

(gdb) next
29	    while (L) {

(gdb) where
#0  PrintList (L=0x602c70) at lists.c:29
#1  0x00000000004007af in main (argc=2, argv=0x7fffffffda48) at test-lists.c:32

(gdb) next
30	        printf(" %d -->",L->item);

(gdb) next
31	        L = L->next;

(gdb) next
32	        count++;

(gdb) next
29	    while (L) {

(gdb) next
30	        printf(" %d -->",L->item);

(gdb) next
31	        L = L->next;

(gdb) next
32	        count++;

(gdb) info breakpoints
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x0000000000400828 in PrintList at lists.c:28
	breakpoint already hit 1 time

(gdb) break 32
Breakpoint 2 at 0x400854: file lists.c, line 32.

(gdb) cond 2 (count == 50)

(gdb) info breakpoints
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x0000000000400828 in PrintList at lists.c:28
	breakpoint already hit 1 time
2       breakpoint     keep y   0x0000000000400854 in PrintList at lists.c:32
	stop only if (count == 50)

(gdb) continue
Continuing.

Breakpoint 2, PrintList (L=0x602610) at lists.c:32
32	        count++;

(gdb) p count
$1 = 50

(gdb) p L
$2 = (NodePtr) 0x602610

(gdb) p *L
$3 = {item = 52, next = 0x6025f0}

(gdb) p L->item
$4 = 52

(gdb) p L->next
$5 = (NodePtr) 0x6025f0

(gdb) p L->next->next
$6 = {item = 53, next = 0x6025d0}

(gdb) p *L->next->next
$7 = {item = 54, next = 0x6025b0}

(gdb) continue
Continuing.
 1 --> 2 --> 3 --> 4 --> 5 --> 6 --> 7 --> 8 --> 9 --> 10 --> 11 --> 12 --> 13 --> 14 --> 15 --> 16 --> 17 --> 18 --> 19 --> 20 --> 21 --> 22 --> 23 --> 24 --> 25 --> 26 --> 27 --> 28 --> 29 --> 30 --> 31 --> 32 --> 33 --> 34 --> 35 --> 36 --> 37 --> 38 --> 39 --> 40 --> 41 --> 42 --> 43 --> 44 --> 45 --> 46 --> 47 --> 48 --> 49 --> 50 --> 51 --> 52 --> 53 --> 54 --> 55 --> 56 --> 57 --> 58 --> 59 --> 60 --> 61 --> 62 --> 63 --> 64 --> 65 --> 66 --> 67 --> 68 --> 69 --> 70 --> 71 --> 72 --> 73 --> 74 --> 75 --> 76 --> 77 --> 78 --> 79 --> 80 --> 81 --> 82 --> 83 --> 84 --> 85 --> 86 --> 87 --> 88 --> 89 --> 90 --> 91 --> 92 --> 93 --> 94 --> 95 --> 96 --> 97 --> 98 --> 99 --> 100 --> NULL 

Breakpoint 1, PrintList (L=0x602010) at lists.c:28
28	    int count = 0;

(gdb) delete 1

(gdb) info breakpoints
Num     Type           Disp Enb Address            What
2       breakpoint     keep y   0x0000000000400854 in PrintList at lists.c:32
	stop only if (count == 50)
	breakpoint already hit 1 time

(gdb) delete 2

(gdb) info breakpoints
No breakpoints or watchpoints.

(gdb) continue
Continuing.
 100 --> 99 --> 98 --> 97 --> 96 --> 95 --> 94 --> 93 --> 92 --> 91 --> 90 --> 89 --> 88 --> 87 --> 86 --> 85 --> 84 --> 83 --> 82 --> 81 --> 80 --> 79 --> 78 --> 77 --> 76 --> 75 --> 74 --> 73 --> 72 --> 71 --> 70 --> 69 --> 68 --> 67 --> 66 --> 65 --> 64 --> 63 --> 62 --> 61 --> 60 --> 59 --> 58 --> 57 --> 56 --> 55 --> 54 --> 53 --> 52 --> 51 --> 50 --> 49 --> 48 --> 47 --> 46 --> 45 --> 44 --> 43 --> 42 --> 41 --> 40 --> 39 --> 38 --> 37 --> 36 --> 35 --> 34 --> 33 --> 32 --> 31 --> 30 --> 29 --> 28 --> 27 --> 26 --> 25 --> 24 --> 23 --> 22 --> 21 --> 20 --> 19 --> 18 --> 17 --> 16 --> 15 --> 14 --> 13 --> 12 --> 11 --> 10 --> 9 --> 8 --> 7 --> 6 --> 5 --> 4 --> 3 --> 2 --> 1 --> NULL 
[Inferior 1 (process 2298) exited normally]

(gdb) quit

